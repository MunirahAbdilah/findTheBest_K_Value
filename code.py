# -*- coding: utf-8 -*-
"""tugas_modul4ML.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/10pJOTsr0jEGxoa2wIEha-RKYZYLM95M5
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.datasets import load_iris
from sklearn.model_selection import train_test_split, cross_val_score
from sklearn.neighbors import KNeighborsClassifier

#mengakses dataset
iris = load_iris()
X = iris.data
y = iris.target

#membagi data train dan test
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

#mengeset nilai k yang akan diuji dengan range 1-30
k_values = list(range(1, 31))

# inisialisasi variabel untuk menyimpan nilai k
cv_scores = []

#perulangan untuk membuat model knn untuk menguji nilai k
for k in k_values:
    knn = KNeighborsClassifier(n_neighbors=k)
    scores = cross_val_score(knn, X_train, y_train, cv=10, scoring='accuracy')
    cv_scores.append(scores.mean())

#menentukan nilai k tertinggi
optimal_k = k_values[np.argmax(cv_scores)]
print("Optimal k:", optimal_k)

#mencetak nilai k
plt.plot(k_values, cv_scores)
plt.xlabel('Number of Neighbors (k)')
plt.ylabel('Cross-Validation Accuracy')
plt.title('k-NN Cross-Validation')
plt.show()